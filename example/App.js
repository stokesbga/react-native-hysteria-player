/**
 * Sample React Native App
 *
 * adapted from App.js generated by the following command:
 *
 * react-native init example
 *
 * https://github.com/facebook/react-native
 */

import React, { Component } from 'react';
import { Platform, Dimensions, StyleSheet, Text, View } from 'react-native';
import Playlist, { PlaylistEventEmitter, EventTypes, PlaylistComponent } from 'react-native-playlist';
import Images from './assets'

const deviceWidth = Dimensions.get('window').width
const tracklistJSON = require('./data/hiphop_playlist_full.json')

const {
  PlaybarSlider,
  PlayPause,
  SkipNext,
  SkipPrev,
  TrackProgress,
  TrackDuration,
  TrackAlbumArt,
  TrackArtist,
  TrackTitle
} = PlaylistComponent

export default class App extends Component<{}> {
  state = {
    switch: true,
    color1: 'teal',
    loaded: false,
    trackTitle: 'bah'
  }

  async componentDidMount() {
    await Playlist.setup()

    const playerTracks = tracklistJSON.tracks.data.slice(0, 2).map(t => ({
      url: t.preview,
      title: t.title,
      artwork: t.album.cover_big,
      album: t.album.title,
      artist: t.artist.name,
      custom: { hello: "blah"}
    }))

    Playlist.addTracks(playerTracks)

    // Add Listener
    PlaylistEventEmitter.addListener(EventTypes.onTrackChange, track => {
      console.log('track', track)
      this.setState({ trackTitle: track?.title })
    })

    // setTimeout(() => {
    //   Playlist.addTracks(playerTracks)
    // }, 10000)
    this.setState({
      loaded: true
    })
  }

  render() {
    return (
      <View style={styles.container}>
        <View style={{ flex: 1, width: '100%' }}>
          <View style={{ flex: 1, backgroundColor: '#e0e0e0' }} >
            <TrackAlbumArt style={{ width: '100%', height: deviceWidth/2, marginLeft: -110, marginTop: -8 }} />
          </View>
          <View style={{ flex: 1 }}>
            <PlaybarSlider 
              hasControl={true}
              thumbRadius={20}
              trackHeightEnabled={5}
              trackHeightDisabled={3}
              trackPlayedColor={this.state.color1}
              trackRemainingColor={this.state.color2}
            />
            <View style={{
              marginTop: 15,
              marginBottom: 60,
            }}>
              <TrackTitle
                fontFamily={'Avenir-Heavy'}
                fontSize={23}
                color={"#222"}
                textAlign={"center"}
                style={{ minHeight: 30 }} />
              <TrackArtist 
                fontFamily={'Monaco'}
                fontSize={19}
                color={"#666"}
                textAlign={"center"}
                style={{ minHeight: 30 }} />
            </View>
            <View style={{ flexDirection: 'row', marginTop: 20, alignItems: 'space-around' }}>
              <TrackProgress
                fontFamily={'Avenir-Heavy'}
                fontSize={15}
                color={'lightgray'}
                textAlign={"center"}
                style={{ minHeight: 50 }}
                />
              <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center'}}>
              <SkipPrev
                disabledOpacity={0.3}
                icon={"skip_prev.png"} 
                style={{
                  flex: 0,
                  width: 28,
                  height: 28,
                }}/>
                </View>
              <PlayPause />
              <SkipNext 
                disabledOpacity={1.0} />
              <TrackDuration 
                fontFamily={'Avenir-Heavy'}
                fontSize={15}
                color={'lightgray'}
                textAlign={"center"}
                style={{ minHeight: 50 }} />
            </View>
          <Text style={{ textAlign: 'center', marginTop: 40 }}>Current track title from PlaylistEventEmitter: {this.state.trackTitle}</Text>
          </View>
        </View>
      </View>
    );
  }
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center'
  },
  welcome: {
    fontSize: 20,
    textAlign: 'center',
    margin: 10,
  },
  instructions: {
    textAlign: 'center',
    color: '#333333',
    marginBottom: 5,
  },
});
